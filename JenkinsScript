pipeline {
    agent any

    stages {
        stage('Clonar Repositorio') {
            steps {
                script {
                    echo 'Clonando el repositorio desde GitHub...'
                }
                git branch: 'main', 
                    url: 'https://github.com/GalicianNyx/TestProyecto.git'
            }
        }

        stage('An치lisis de C칩digo con SonarQube') {
            steps {
                script {
                    echo 'Ejecutando an치lisis de SonarQube...'
                }
                withSonarQubeEnv('Sonar') {
                    sh 'export PATH=$PATH:/opt/sonarscanner/sonar-scanner-6.2.1.4610-linux-x64/bin && ' +
                   'sonar-scanner -Dsonar.projectKey=TestProyecto ' +
                   '-Dsonar.sources=. ' +
                   '-Dsonar.host.url=http://192.168.1.101:9000 ' +
                   '-Dsonar.login=sqa_7fb62898f900b70204fe7fd8b5fba84c3263d321'
                }
            }
        }

        stage('Escaneo de Vulnerabilidades con OWASP ZAP') {
            steps {
                script {
                    echo 'Ejecutando escaneo con OWASP ZAP...'
                }
                sh """
                zap-cli quick-scan --self-contained http://192.168.1.101:8080
                """
            }
        }

        stage('Notificar Resultado') {
            steps {
                script {
                    echo 'Notificaci칩n: Pipeline finalizado.'
                }
            }
        }
    }
}
