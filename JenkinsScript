pipeline {
    agent any

    stages {
        stage('Clonar Repositorio') {
            steps {
                script {
                    echo 'Clonando el repositorio desde GitHub...'
                }
                git branch: 'main', 
                    url: 'https://github.com/GalicianNyx/TestProyecto.git'
            }
        }

        stage('Análisis de Código con SonarQube') {
            steps {
                script {
                    echo 'Ejecutando análisis de SonarQube...'
                }
                withSonarQubeEnv('Sonar') {
                    sh '''
                    export PATH=$PATH:/opt/sonarscanner/sonar-scanner-6.2.1.4610-linux-x64/bin && 
                    sonar-scanner -Dsonar.projectKey=TestProyecto \
                    -Dsonar.sources=. \
                    -Dsonar.host.url=http://192.168.1.101:9000 \
                    -Dsonar.login=sqa_7fb62898f900b70204fe7fd8b5fba84c3263d321
                    '''
                }
            }
        }

        stage('Desplegar la Aplicación con Docker') {
            steps {
                script {
                    echo 'Desplegando la aplicación en Docker...'
                    sh '''
                    docker pull securecodebox/zap
                    docker run -d -p 9090:8080 securecodebox/zap
                    '''
                }
            }
        }

        stage('Escaneo de Vulnerabilidades con OWASP ZAP') {
            steps {
                script {
                    echo 'Ejecutando escaneo con OWASP ZAP...'
                }
                sh """
                docker exec -t \$(docker ps -q --filter ancestor=securecodebox/zap) zap-baseline.py -t http://localhost:9090
                """
            }
        }

        stage('Notificar Resultado') {
            steps {
                script {
                    echo 'Notificación: Pipeline finalizado.'
                }
            }
        }
    }
}
